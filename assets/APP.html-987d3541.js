import{_ as i,r as o,o as l,c as u,a as s,b as n,d as a,w as c,e as p}from"./app-ef6f9170.js";const r={},k=s("h1",{id:"app-api-签名与鉴权",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#app-api-签名与鉴权","aria-hidden":"true"},"#"),n(" APP API 签名与鉴权")],-1),d=s("h2",{id:"app-api-签名特性",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#app-api-签名特性","aria-hidden":"true"},"#"),n(" APP API 签名特性")],-1),v=s("code",null,"appkey",-1),m=s("code",null,"appsec",-1),b=s("code",null,"AppKey",-1),g=s("code",null,"AppSec",-1),y=p('<ul><li><p>不同 <code>appkey</code> 对应不同的 app (如客户端、概念版、必剪、漫画、bililink等)</p></li><li><p>不同平台同 app 也会存在不同的 <code>appkey</code> (如安卓端、ios端、TV端等)</p></li><li><p>同平台同 app 下不同功能也会存在不同的 <code>appkey</code>（如登录专用、取流专用等）</p></li><li><p>不同版本的客户端的 <code>appkey</code> 也可能不同</p></li><li><p><strong>appkey与appsec一一对应</strong></p></li></ul><h2 id="app-api-签名算法" tabindex="-1"><a class="header-anchor" href="#app-api-签名算法" aria-hidden="true">#</a> APP API 签名算法</h2><ol><li>首先为参数中添加<code>appkey</code>字段</li><li>然后按照参数的 Key 重新排序</li><li>再对这个 Key-Value 进行 url query 序列化，并拼接与之对应的<code>appsec</code> (盐) 进行 <strong>md5 Hash 运算</strong>（32-bit 字符小写），该 hash 便是 API 签名</li><li>最后在参数尾部增添<code>sign</code>字段，它的 Value 为上一步计算所得的 hash，一并作为表单或 Query 提交</li></ol><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2><p>该 Demo 提供 <a href="#python">Python</a>、<a href="#java">Java</a>、<a href="#typescript-javascript">TS/JS</a>、<a href="#swift">Swift</a>、<a href="#cplusplus">C++</a> 语言例程</p><p>使用 appkey = <code>1d8b6e7d45233436</code>, appsec = <code>560c52ccd288fed045859ed18bffd973</code> 对如下 <code>params</code> 参数进行签名</p>',6),h=s("code",null,"appkey",-1),f=s("code",null,"AppSec",-1),q=p(`<h3 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse

<span class="token keyword">def</span> <span class="token function">appsign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> appkey<span class="token punctuation">,</span> appsec<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;为请求参数进行 APP 签名&#39;</span>
    params<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;appkey&#39;</span><span class="token punctuation">:</span> appkey<span class="token punctuation">}</span><span class="token punctuation">)</span>
    params <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 按照 key 重排参数</span>
    query <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token comment"># 序列化参数</span>
    sign <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">(</span>query<span class="token operator">+</span>appsec<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 计算 api 签名</span>
    params<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;sign&#39;</span><span class="token punctuation">:</span>sign<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> params

appkey <span class="token operator">=</span> <span class="token string">&#39;1d8b6e7d45233436&#39;</span>
appsec <span class="token operator">=</span> <span class="token string">&#39;560c52ccd288fed045859ed18bffd973&#39;</span>
params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span><span class="token number">114514</span><span class="token punctuation">,</span>
    <span class="token string">&#39;str&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;1919810&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;test&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;いいよ，こいよ&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
signed_params <span class="token operator">=</span> appsign<span class="token punctuation">(</span>params<span class="token punctuation">,</span> appkey<span class="token punctuation">,</span> appsec<span class="token punctuation">)</span>
query <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>signed_params<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>signed_params<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出内容分别是进行 APP 签名的后参数的 key-Value 以及 url query 形式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&#39;appkey&#39;: &#39;1d8b6e7d45233436&#39;, &#39;id&#39;: 114514, &#39;str&#39;: &#39;1919810&#39;, &#39;test&#39;: &#39;いいよ，こいよ&#39;, &#39;sign&#39;: &#39;01479cf20504d865519ac50f33ba3a7d&#39;}
appkey=1d8b6e7d45233436&amp;id=114514&amp;str=1919810&amp;test=%E3%81%84%E3%81%84%E3%82%88%EF%BC%8C%E3%81%93%E3%81%84%E3%82%88&amp;sign=01479cf20504d865519ac50f33ba3a7d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>cctyl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLEncoder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeMap</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> cctyl
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppSigner</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">APP_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;1d8b6e7d45233436&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">APP_SEC</span> <span class="token operator">=</span> <span class="token string">&quot;560c52ccd288fed045859ed18bffd973&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">appSign</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 为请求参数进行 APP 签名</span>
        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;appkey&quot;</span><span class="token punctuation">,</span> <span class="token constant">APP_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 按照 key 重排参数</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> sortedParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 序列化参数</span>
        <span class="token class-name">StringBuilder</span> queryBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> sortedParams<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>queryBuilder<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                queryBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;&amp;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            queryBuilder
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">generateMD5</span><span class="token punctuation">(</span>queryBuilder <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token constant">APP_SEC</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generateMD5</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">MessageDigest</span> md <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digest <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> b <span class="token operator">:</span> digest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%02x&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;114514&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;str&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1919810&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;いいよ，こいよ&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">appSign</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果为：01479cf20504d865519ac50f33ba3a7d</p><h3 id="typescript-javascript" tabindex="-1"><a class="header-anchor" href="#typescript-javascript" aria-hidden="true">#</a> TypeScript/JavaScript</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createHash <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:crypto&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">Params</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>

<span class="token keyword">const</span> <span class="token function-variable function">md5</span> <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/**
 * 为请求参数进行 APP 签名
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">appSign</span><span class="token punctuation">(</span>params<span class="token operator">:</span> Params<span class="token punctuation">,</span> appkey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> appsec<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  params<span class="token punctuation">.</span>appkey <span class="token operator">=</span> appkey
  <span class="token keyword">const</span> searchParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
  searchParams<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">md5</span><span class="token punctuation">(</span>searchParams<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> appsec<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token function">appSign</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token number">114514</span><span class="token punctuation">,</span>
      str<span class="token operator">:</span> <span class="token string">&#39;1919810&#39;</span><span class="token punctuation">,</span>
      test<span class="token operator">:</span> <span class="token string">&#39;いいよ，こいよ&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;1d8b6e7d45233436&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;560c52ccd288fed045859ed18bffd973&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">&#39;01479cf20504d865519ac50f33ba3a7d&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果为：01479cf20504d865519ac50f33ba3a7d</p><h3 id="swift" tabindex="-1"><a class="header-anchor" href="#swift" aria-hidden="true">#</a> Swift</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token class-name">Foundation</span>
<span class="token keyword">import</span> <span class="token class-name">CommonCrypto</span>

<span class="token comment">//Swift标准库没有MD5函数，所以我们要自己实现一个</span>
<span class="token keyword">func</span> <span class="token function-definition function">MD5</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> length <span class="token operator">=</span> <span class="token class-name">Int</span><span class="token punctuation">(</span>CC_MD5_DIGEST_LENGTH<span class="token punctuation">)</span>
    <span class="token keyword">var</span> digest <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">UInt8</span><span class="token punctuation">]</span><span class="token punctuation">(</span>repeating<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">:</span> length<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">let</span> d <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token omit keyword">_</span> <span class="token operator">=</span> d<span class="token punctuation">.</span>withUnsafeBytes <span class="token punctuation">{</span> body <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token keyword">in</span>
            <span class="token function">CC_MD5</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span>baseAddress<span class="token punctuation">,</span> <span class="token function">CC_LONG</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>digest<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token class-name">String</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;%02x&quot;</span></span><span class="token punctuation">,</span> digest<span class="token punctuation">[</span><span class="token short-argument">$1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function-definition function">appSign</span><span class="token punctuation">(</span>params<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">,</span>appKey<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">,</span>appSec<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> signedParams <span class="token operator">=</span> params
    signedParams<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;appkey&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> appKey
    <span class="token keyword">let</span> sortedParams <span class="token operator">=</span> signedParams<span class="token punctuation">.</span>sorted <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>key <span class="token operator">&lt;</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>key <span class="token punctuation">}</span>
    <span class="token comment">//在制作成query时，需要显式addingPercentEncoding转换</span>
    <span class="token keyword">let</span> query <span class="token operator">=</span> sortedParams<span class="token punctuation">.</span>map <span class="token punctuation">{</span> <span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>key</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">=</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">addingPercentEncoding</span><span class="token punctuation">(</span>withAllowedCharacters<span class="token punctuation">:</span> <span class="token punctuation">.</span>urlQueryAllowed<span class="token punctuation">)</span><span class="token operator">!</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">joined</span><span class="token punctuation">(</span>separator<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;&amp;&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> sign <span class="token operator">=</span> <span class="token function">MD5</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> query<span class="token operator">+</span>appSec<span class="token punctuation">)</span>
    <span class="token keyword">return</span> sign
<span class="token punctuation">}</span>


<span class="token comment">//testSign</span>
<span class="token keyword">let</span> appKey <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;1d8b6e7d45233436&quot;</span></span>
<span class="token keyword">let</span> appSec <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;560c52ccd288fed045859ed18bffd973&quot;</span></span>
<span class="token keyword">let</span> signResult <span class="token operator">=</span> <span class="token function">appSign</span><span class="token punctuation">(</span>params<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token string-literal"><span class="token string">&quot;id&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;114514&quot;</span></span><span class="token punctuation">,</span>
    <span class="token string-literal"><span class="token string">&quot;str&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;1919810&quot;</span></span><span class="token punctuation">,</span>
    <span class="token string-literal"><span class="token string">&quot;test&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;いいよ，こいよ&quot;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>appKey<span class="token punctuation">:</span>appKey<span class="token punctuation">,</span>appSec<span class="token punctuation">:</span>appSec<span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>signResult<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果为：01479cf20504d865519ac50f33ba3a7d</p><h3 id="cplusplus" tabindex="-1"><a class="header-anchor" href="#cplusplus" aria-hidden="true">#</a> CplusPlus</h3>`,14),_={href:"https://github.com/libcpr/cpr",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/weidai11/cryptopp",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/nlohmann/json",target:"_blank",rel:"noopener noreferrer"},S=p(`<div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="language-c++"><code>#include &lt;print&gt;    // std::println

/// thrid party libraries
#include &lt;cpr/cpr.h&gt;            // cpr::util::urlEncode()
#include &lt;cryptopp/md5.h&gt;
#include &lt;cryptopp/hex.h&gt;
#include &lt;nlohmann/json.hpp&gt;

/*
 * 注意，假定不会发生错误！
 */

/* 获取 md5 hex(lower) */
std::string Get_md5_hex(const std::string &amp;Input_str) {
    CryptoPP::Weak1::MD5 hash;
    std::string          md5_hex;

    CryptoPP::StringSource ss(Input_str, true,
        new CryptoPP::HashFilter(hash,
            new CryptoPP::HexEncoder(
                new CryptoPP::StringSink(md5_hex)
            )
        )
    );

    std::ranges::for_each(md5_hex, [](char &amp;x) { x = std::tolower(x); });
    return md5_hex;
}

/* 将 json 转换为 url 编码字符串 */
std::string Json_to_url_encode_str(const nlohmann::json &amp;Json) {
    std::string encode_str;
    for (const auto &amp;[key, value]: Json.items()) {
        encode_str.append(key).append(&quot;=&quot;).append(cpr::util::urlEncode(value.is_string() ? value.get&lt;std::string&gt;() : to_string(value))).append(&quot;&amp;&quot;);
    }

    // remove the last &#39;&amp;&#39;
    encode_str.resize(encode_str.size() - 1, &#39;\\0&#39;);
    return encode_str;
}

std::string App_sign(nlohmann::json &amp;Params, const std::string &amp;App_key, const std::string &amp;App_sec) {
    Params[&quot;appkey&quot;] = App_key;
    Params[&quot;sign&quot;]   = Get_md5_hex(Json_to_url_encode_str(Params) + App_sec);
    return Json_to_url_encode_str(Params);
}

int main() {
    nlohmann::json Params;
    Params[&quot;id&quot;]   = 114514;
    Params[&quot;str&quot;]  = &quot;1919810&quot;;
    Params[&quot;test&quot;] = &quot;いいよ，こいよ&quot;;

    constexpr auto App_key = &quot;1d8b6e7d45233436&quot;;
    constexpr auto App_sec = &quot;560c52ccd288fed045859ed18bffd973&quot;;
    std::string    sign    = App_sign(Params, App_key, App_sec);
    std::println(&quot;{}&quot;, to_string(Params));
    std::println(&quot;{}&quot;, sign);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&quot;appkey&quot;:&quot;1d8b6e7d45233436&quot;,&quot;id&quot;:114514,&quot;sign&quot;:&quot;01479cf20504d865519ac50f33ba3a7d&quot;,&quot;str&quot;:&quot;1919810&quot;,&quot;test&quot;:&quot;いいよ，こいよ&quot;}
appkey=1d8b6e7d45233436&amp;id=114514&amp;sign=01479cf20504d865519ac50f33ba3a7d&amp;str=1919810&amp;test=%E3%81%84%E3%81%84%E3%82%88%EF%BC%8C%E3%81%93%E3%81%84%E3%82%88
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function x(A,E){const e=o("RouterLink"),t=o("ExternalLinkIcon");return l(),u("div",null,[k,d,s("p",null,[n("部分客户端专用的 REST API 存在基于参数签名的鉴权，需要使用规定的"),v,n("及其对应的"),m,n("与原始请求参数进行签名计算，部分"),b,n("及与之对应的"),g,n("已经被公开：见该文档 "),a(e,{to:"/docs/misc/sign/APPKey.html"},{default:c(()=>[n("APPKey")]),_:1})]),y,s("p",null,[n("上述示例"),h,n("、"),f,n("均来自文档 "),a(e,{to:"/docs/misc/sign/APPKey.html"},{default:c(()=>[n("APPKey")]),_:1})]),q,s("p",null,[n("需要 c++ 23 标准库，"),s("a",_,[n("cpr"),a(t)]),n("、"),s("a",w,[n("cryptopp"),a(t)]),n("、"),s("a",P,[n("nlohmann/json"),a(t)]),n(" 等依赖")]),S])}const j=i(r,[["render",x],["__file","APP.html.vue"]]);export{j as default};
