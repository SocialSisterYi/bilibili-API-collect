import{_ as c,r as d,o as i,c as r,a as t,b as e,d as n,w as l,e as s}from"./app-ef6f9170.js";const p={},u=t("h1",{id:"贡献指南",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#贡献指南","aria-hidden":"true"},"#"),e(" 贡献指南")],-1),h=t("p",null,"欢迎来到 bilibili-API-collect 社区贡献指南，本文主要面向需要进行提交贡献文档内容的用户。",-1),b=t("h2",{id:"总则",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#总则","aria-hidden":"true"},"#"),e(" 总则")],-1),m={href:"https://github.com/SocialSisterYi/bilibili-API-collect",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.bilibili.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/SocialSisterYi/bilibili-API-collect/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},_=t("strong",null,"主站业务接口",-1),k={href:"https://zh.wikipedia.org/zh-cn/Markdown",target:"_blank",rel:"noopener noreferrer"},f=t("strong",null,"路径",-1),P=t("strong",null,"文件",-1),x=s('<p>本项目收集的接口类型包括但不限于 REST API、gRPC、WebSocket，文档内统一优先使用安全套接字协议，如 <code>https</code>、<code>securityRpc</code>、<code>wss</code>。</p><h2 id="issue、discussion-与社群讨论" tabindex="-1"><a class="header-anchor" href="#issue、discussion-与社群讨论" aria-hidden="true">#</a> Issue、Discussion 与社群讨论</h2><p>对文档内容存在<strong>不理解</strong>之处、以及发现文档内容有所<strong>缺失</strong>或<strong>错误</strong>，可直接提出，强烈建议以提交 <strong>Issue</strong> 的形式添加 / 补充 / 更新文档中的说明，以发起 <strong>Discussion</strong> 的形式提出问题、代码用例、情报分享，并希望关于本项目的各种交流都是<strong>公开进行</strong>的，因为这样才可以保证关键信息的一致性。</p><p>提交 Issue 请遵守以下原则：</p><ol><li>标题需要点明 API 的用处, <code>&lt;title&gt;</code> 要替换为标题主要内容而不是保留不动，切勿仅填写 <code>补充</code>、<code>修复</code>，形式良好的标题可以是 <code>[新增请求] 新增 xx 接口</code>、<code>[更新请求] xx 接口地址已失效</code>、<code>[更新请求] xx 接口的参数有变化</code></li><li>正文请按照 Issue 模板进行填写，标明 API 来源（Web、Android、iOS、TV 等）、API 类型（REST、gRPC、WebSocket 等）、API 地址</li><li>详情描述需要提供该 API 的使用场景、请求及响应字段等，可附上原始抓包记录 (文本格式优先)；在更新时还需指出原文档中与最新 API 行为不符之处，并附上已知的最新改动。例如：“在前端页面某地址 / APP 某界面访问某 API（标明地址），它的某参数与文档中不符（标明文档地址）”</li></ol><p>发起 Discussion 请遵守以下原则：</p>',6),w=s("<li>标题言简意骇，说明欲提出的问题要点，如 <code>如何通过 xx 接口获取 yy</code>、<code>关于 xx 字段意义的探讨</code>、<code>建议将 xx 加入 yy 分类</code> 等标题；切勿使用表意含糊不清或索取性的标题，如 <code>怎么解决风控</code>、<code>搜索的接口是什么</code>、<code>好兄弟有没有投稿的接口</code> 等标题</li><li>Discussion 正文应对遇到的问题进行尽可能详细的描述，展开并聚焦有关的信息，例如： “按照文档中某位置的说明进行了某操作，为什么无法获得预期结果”、“请问某 API 的某字段的具体含义是什么”</li>",2),q={href:"https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/tangx/Stop-Ask-Questions-The-Stupid-Ways",target:"_blank",rel:"noopener noreferrer"},y=t("p",null,"同时，您还可以通过加入社群的方式参与讨论",-1),I={href:"https://qm.qq.com/cgi-bin/qm/qr?_wv=1027&k=ympvb3LAPT-Ulu3ezhGqbkJ8zXMKImOX&authKey=z1KdkOdKO3wytN43m9K6On9nBtnDL4pAoD6VQHCipFBb9TasNDKuDHCmOE6TF3uc&noverify=0&group_code=191187164",target:"_blank",rel:"noopener noreferrer"},S={href:"https://t.me/bilibili_API_collect_community",target:"_blank",rel:"noopener noreferrer"},T={class:"custom-container tip"},R=t("p",{class:"custom-container-title"},"✅提示",-1),C={href:"https://github.com/SocialSisterYi/bilibili-API-collect",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/SocialSisterYi/bilibili-API-collect",target:"_blank",rel:"noopener noreferrer"},E={class:"custom-container warning"},N=t("p",{class:"custom-container-title"},"⚠️注意",-1),D=t("p",null,[e("群内讨论同样需要遵守"),t("strong",null,"公开交流"),e("的原则，以及群内会定期清理不活跃成员。")],-1),O=t("strong",null,"QQ 交流群",-1),M={href:"https://github.com/SocialSisterYi",target:"_blank",rel:"noopener noreferrer"},G=s('<div class="custom-container danger"><p class="custom-container-title">🈲禁止</p><p>项目 Issue 及其相关社群中<strong>禁止</strong>询问讨论 风控解除、爬虫（采集）、破解、漏洞利用、买卖代码和账号 相关内容，抵制基于本项目进行的一切黑产行为！</p></div><h2 id="目录与路径结构" tabindex="-1"><a class="header-anchor" href="#目录与路径结构" aria-hidden="true">#</a> 目录与路径结构</h2><h3 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h3>',3),U=t("strong",null,"Markdown 无序列表",-1),V=t("code",null,"视频",-1),j=t("code",null,"基本信息",-1),z=t("code",null,"快照",-1),L=t("code",null,"视频推荐",-1),Q=t("code",null,"TAG",-1),J=t("strong",null,"Markdown 复选框",-1),K=s(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">-</span> [ ] 视频
  <span class="token list punctuation">-</span> [x] 基本信息
  <span class="token list punctuation">-</span> [x] 快照
  <span class="token list punctuation">-</span> [x] 视频推荐
  <span class="token list punctuation">-</span> [ ] TAG
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路径" tabindex="-1"><a class="header-anchor" href="#路径" aria-hidden="true">#</a> 路径</h3><p>路径层级应当与文档目录一致，以文件夹的形式存放在项目中的 <code>/docs</code> 路径下，命名统一使用英文小写，如 <code>video</code>、<code>danmaku</code>、<code>comment</code>, 不建议出现 <code>&amp;</code> 等特殊字符</p><p>二级、三级路径应当存在二级三级目录，可选添加 <code>README.md</code> 以描述该子目录</p><h3 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件</h3><p>各个子接口集整理为 Markdown (.md) 文件，命名统一使用英文小写，如 <code>info.md</code>、<code>action.md</code>、<code>list.md</code></p><p>文档文件中用于存放相关的接口的说明，如 <code>video/</code> 下的 <code>info.md</code>，存在 <code>查询视频基本信息</code>、<code>查询视频简介</code>、<code>查询视频分P列表</code> 等内容</p><h2 id="markdown-文档内容格式" tabindex="-1"><a class="header-anchor" href="#markdown-文档内容格式" aria-hidden="true">#</a> Markdown 文档内容格式</h2>`,8),W={href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://vuepress.vuejs.org/guide/markdown.html",target:"_blank",rel:"noopener noreferrer"},H=t("strong",null,"实际情况",-1),X={href:"https://github.com/SessionHu/json-apidoc-gen",target:"_blank",rel:"noopener noreferrer"},F=t("code",null,"json-apidoc-gen",-1),Z=s(`<h3 id="头部" tabindex="-1"><a class="header-anchor" href="#头部" aria-hidden="true">#</a> 头部</h3><p>文档首行为<strong>一级标签</strong>格式标题，如 <code># 用户基本信息</code></p><p><strong>文档头部不需要手写索引</strong>，索引由 VuePress 自动生成</p><h3 id="接口说明" tabindex="-1"><a class="header-anchor" href="#接口说明" aria-hidden="true">#</a> 接口说明</h3><p>文档中可存在多个接口说明，应当遵守同一范式，依次排列在文档中</p><p>接口说明分为 <code>标题</code>、<code>地址</code>、<code>说明</code>、<code>请求参数</code>、<code>响应正文</code>、<code>示例</code> 这些部分</p><p>接口标题为<strong>二级以下</strong>的标签，接口地址使用<strong>引用</strong>语法，地址只保留 REST API 路径，不应携带 query 等内容</p><p>接口地址下方需要注明接口的请求方式，如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 等，使用<em>斜体</em>语法</p><p>若接口存在认证或鉴权，需要在说明中注明，如 <code>Cookie (SESSDATA)</code>、<code>APP</code>（认证是针对用户的，鉴权是针对接口使用的）</p><p>其他使用说明也可写在这里，如 <code>限制游客访问的视频需要登录</code></p><p>e.g.：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">##</span> 获取视频详细信息_web端</span>

<span class="token blockquote punctuation">&gt;</span> https://api.bilibili.com/x/web-interface/view

<span class="token italic"><span class="token punctuation">*</span><span class="token content">请求方式：GET</span><span class="token punctuation">*</span></span>

认证方式：Cookie (SESSDATA)

限制游客访问的视频需要登录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>请求参数</strong>应在<strong>接口说明</strong>的下方，应注明参数类型 url 参数或正文参数（正文参数应注明 content-type，如 <code>application/x-www-form-urlencoded</code> 或 <code>multipart/form-data</code>），使用<strong>加粗</strong>语法</p><p>对象的字段及其含义使用<strong>表格</strong>进行整理，表头统一依次为 <code>参数名</code>、<code>类型</code>、<code>内容</code>、<code>必要性</code>、<code>备注</code>，类型为 <code>num</code>、<code>str</code>、<code>bool</code>、<code>nums</code>、<code>strs</code>、<code>file</code> 等 (未来可能会统一改为基于 TypeScript 的类型系统)，必要性为 <code>必要</code>、<code>非必要</code>、<code>必要 (可选)</code> 等，表格内每个字段为一行</p><p>e.g.：</p><table><thead><tr><th>参数名</th><th>类型</th><th>内容</th><th>必要性</th><th>备注</th></tr></thead><tbody><tr><td>aid</td><td>num</td><td>稿件 avid</td><td>必要 (可选)</td><td>avid 与 bvid 任选</td></tr><tr><td>bvid</td><td>str</td><td>稿件 bvid</td><td>必要 (可选)</td><td>avid 与 bvid 任选</td></tr></tbody></table><p><strong>响应正文</strong>应在<strong>请求参数</strong>的下方，接口响应的数据格式应标注，如 <code>JSON 回复</code>、<code>XML 回复</code>、<code>ProtoBuf 回复</code>，使用<strong>加粗</strong>语法</p><p>JSON Object 或 ProtoBuf Message 应以对象的<strong>表格</strong>形式书写，表头为 <code>根对象</code> 或 <code>xx 中的 yy 对象</code> 或 <code>xx.yy.zz 对象</code>，若对象位于数组中则为 <code>xx 数组中的对象</code> 或 <code>xx[] 中的对象</code></p><p>表头统一依次为 <code>字段</code>、<code>类型</code>、<code>内容</code>、<code>备注</code>，类型为 JSON / Protobuf 的标准类型，如 <code>num</code>、<code>str</code>、<code>bool</code>、<code>obj</code>、<code>array</code>、<code>null</code> 等</p><p>不明确定义的字段说明在内容的末尾添加问号，如 <code>播放数？</code>；定义尚未明确的字段使用 <code>（？）</code> 在内容中占位，并在备注中填写 <code>作用尚不明确</code></p><p>多个对象及数组，使用<strong>遍历树</strong>的顺序进行排列, 若数组中的每一项结构均相同也可以直接省略为像 <code>xxx 数组中的对象</code> 这样的格式</p><p>e.g.：</p><p><code>data</code> 对象：</p><table><thead><tr><th>字段</th><th>类型</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>bvid</td><td>str</td><td>稿件 bvid</td><td></td></tr><tr><td>aid</td><td>num</td><td>稿件 avid</td><td></td></tr><tr><td>videos</td><td>num</td><td>稿件分P总数</td><td>默认为 1</td></tr><tr><td>tid</td><td>num</td><td>分区 tid</td><td></td></tr><tr><td>no_cache</td><td>bool</td><td>（？）</td><td>作用尚不明确</td></tr></tbody></table><p>Json Array 或 ProtoBuf Repeated 类型使用数组的<strong>表格</strong>形式书写，表头统一依次为 <code>项</code>、<code>类型</code>、<code>内容</code>、<code>备注</code>，无限长度数组表尾需要添加<strong>省略号</strong></p><p>数组每项内容若与实际数据有关联，<code>内容</code> 字段则可标为 <code>(n+1)P 视频内容</code> 这样的形式</p><p>e.g.：</p><p><code>data</code> 中的 <code>pages</code> 数组：</p><table><thead><tr><th>项</th><th>类型</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>0</td><td>obj</td><td>1P 视频内容</td><td>无分 P 仅有此项</td></tr><tr><td>n</td><td>obj</td><td>(n+1)P 视频内容</td><td></td></tr><tr><td>……</td><td>obj</td><td>……</td><td>……</td></tr></tbody></table><p><strong>示例</strong>部分位于所有<strong>响应正文</strong>部分下方，需要<strong>加粗</strong>格式，分为请求命令示例与响应体示例两部分</p><p>请求命令示例为一段可测试该接口的 cURL 命令或某种编程语言的代码，使用<strong>代码块</strong>语法书写，命令应当尽可能简短、便于使人阅读, 代码缩进为 <strong>2</strong> 个 <strong>空格 (U+0020)</strong></p><p>示例命令中的认证信息应做<strong>脱敏处理</strong>，如 Cookie、Token、access_key 等，可替换为 <code>xxx</code> 占位</p><p>示例命令前后可以适当添加一些文字说明</p><p>响应体示例为一段格式化后的 JSON 或 ProtoBuf Message，使用<strong>代码块</strong>语法书写，并使用 <code>&lt;details&gt;</code> 标签进行折叠, 仍一律使用 <strong>2</strong> 个 <strong>空格</strong> 进行缩进</p><p>e.g.：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token bold"><span class="token punctuation">**</span><span class="token content">示例：</span><span class="token punctuation">**</span></span>

获取视频 <span class="token code-snippet code keyword">\`av85440373\`</span> 的基本信息

<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">shell</span>
<span class="token code-block language-shell">curl -G &#39;https://api.bilibili.com/x/web-interface/view&#39; \\
	--data-urlencode &#39;aid=85440373&#39;</span>
<span class="token punctuation">\`\`\`</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>details</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>查看响应示例：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span>

<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">jsonc</span>
<span class="token code-block language-jsonc">{
  &quot;code&quot;: 0,
  &quot;message&quot;: &quot;0&quot;,
  &quot;ttl&quot;: 1,
  &quot;data&quot;: {
    &quot;bvid&quot;: &quot;BV117411r7R1&quot;,
    &quot;aid&quot;: 85440373,
    &quot;videos&quot;: 1,
    &quot;tid&quot;: 28,
    &quot;tname&quot;: &quot;原创音乐&quot;,
    &quot;copyright&quot;: 1,
    // ...
  }
}</span>
<span class="token punctuation">\`\`\`</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>details</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="枚举值与属性位" tabindex="-1"><a class="header-anchor" href="#枚举值与属性位" aria-hidden="true">#</a> 枚举值与属性位</h3><p>接口返回或请求中若存在一些 enum 类型或二进制属性位，应当单独进行探讨，如视频的属性位 <code>attribute</code> 或视频清晰度 <code>qn</code></p><p>这些值及其说明使用<strong>表格</strong>进行整理，表头统一为 <code>位</code> / <code>代码</code> / <code>值</code>、<code>含义</code>、<code>备注</code></p><p>这些枚举值或属性位的用法应附加文字说明</p><p>e.g.：</p><table><thead><tr><th>值</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>6</td><td>240P 极速</td><td>仅 MP4 格式支持<br>仅 <code>platform=html5</code> 时有效</td></tr><tr><td>16</td><td>360P 流畅</td><td></td></tr><tr><td>32</td><td>480P 清晰</td><td></td></tr><tr><td>64</td><td>720P 高清</td><td>WEB 端默认值<br>B 站前端需要登录才能选择，但是直接发送请求可以不登录就拿到 720P 的取流地址<br><strong>无 720P 时则为 720P60</strong></td></tr><tr><td>74</td><td>720P60 高帧率</td><td>需要登录认证</td></tr><tr><td>80</td><td>1080P 高清</td><td>TV 端与 APP 端默认值<br>需要登录认证</td></tr></tbody></table><h2 id="proto-定义格式" tabindex="-1"><a class="header-anchor" href="#proto-定义格式" aria-hidden="true">#</a> Proto 定义格式</h2>`,43),$={href:"https://protobuf.dev/",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://grpc.io/docs/",target:"_blank",rel:"noopener noreferrer"},te=s(`<p>存放于项目的 <code>/grpc_api</code> 路径下，使用包名进行路径层级的组织，如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/grpc_api/bilibili/main/community/reply/v1/reply.proto
/grpc_api/bilibili/app/archive/v1/archive.proto
/grpc_api/bilibili/app/view/v1/view.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>proto 文件内使用<strong>单行注释</strong>标注字段或对象的含义，如：</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">// UP主信息</span>
<span class="token keyword">message</span> <span class="token class-name">Author</span> <span class="token punctuation">{</span>
	<span class="token comment">// UP主mid</span>
	<span class="token builtin">int64</span> mid <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token comment">// UP主昵称</span>
	<span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token comment">// UP主头像url</span>
	<span class="token builtin">string</span> face <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档提交" tabindex="-1"><a class="header-anchor" href="#文档提交" aria-hidden="true">#</a> 文档提交</h2><h3 id="拉取-pull-与-提交-commit" tabindex="-1"><a class="header-anchor" href="#拉取-pull-与-提交-commit" aria-hidden="true">#</a> 拉取 (Pull) 与 提交 (Commit)</h3><p>本项目仓库仅托管于 GitHub, 使用 Git 作为版本控制系统, 你需要对两者有基础的了解</p><p>请先 fork, 然后在自己的 fork 上进行修改</p>`,8),ne=t("code",null,"Update xxx",-1),oe={href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"},se=s('<p>当发现远程与本地仓库不一致时, 若你操作的 fork 的 branch 无打开的 PR, 建议使用变基拉取, 而不是生成一个额外的合并提交的合并拉取, 反之则相反</p><p>移动文件请使用 <code>git mv</code>, 而不是删除并添加同一个文件于不同位置 (该问题在 VSCode 的 GUI 版 Git 中存在)</p><h3 id="拉取请求-pull-request" tabindex="-1"><a class="header-anchor" href="#拉取请求-pull-request" aria-hidden="true">#</a> 拉取请求 (Pull Request)</h3><p>使用 拉取请求 (Pull Request, PR) 将修改后的文档提交到 <code>master</code> 分支，标题需写明修改或新增的内容, <code>gh_pages</code> 分支将在 PR 合并后自动更新</p><p>如果你还没有完成计划的全部修改, 请创建 Draft Pull Request 表示你还没有做好被合并的准备 <s>(抢占先机, 精神可嘉, 值得鼓励)</s></p><p>PR 正文使用 <strong>无序列表</strong> 写明更改的每一项内容, 可以使用复选框表明进度, 需要关闭的 Issue 请使用 <code>close #xxxx</code> 这样的格式一并包含在内</p><p>如果内容包含代码, 请一并提供测试的输入与输出的文本或截图, 最好可以附上完整的测试环境及相关可执行文件等</p><p>PR 合并后, 请及时删除或更新分支. 特别是在使用压缩合并或变基合并后, 请 <code>Discard changes</code> 或直接删除分支, 以免在下一次 PR 后出现重复相同提交的问题</p>',8);function de(ae,ce){const o=d("ExternalLinkIcon"),a=d("RouterLink");return i(),r("div",null,[u,h,b,t("p",null,[t("a",m,[e("bilibili-API-collect"),n(o)]),e(" 项目（简称 BAC 或 b-a-c）是一个仅用于学习研究、社区开源、公益性质的 "),t("a",g,[e("B 站（哔哩哔哩）"),n(o)]),e("API（应用程序接口）文档，使用 "),t("a",v,[e("CC-BY-NC 4.0 协议"),n(o)]),e("开源，它将无差别收集整理相关的"),_,e("。")]),t("p",null,[e("该项目使用 "),t("a",k,[e("Markdown"),n(o)]),e(" 语法进行文档书写，按照业务类型及功能以"),f,e("＋"),P,e("形式索引，任何用户都可通过 Issue、Pull Request 与 Discussion 提供自己分析出的接口地址与使用说明。")]),x,t("ol",null,[w,t("li",null,[e("提出问题时注意"),t("a",q,[e("提问的智慧"),n(o)]),e("并且"),t("a",A,[e("别像弱智一样提问"),n(o)])])]),y,t("ul",null,[t("li",null,[e("QQ 交流群："),t("a",I,[e("邀请链接"),n(o)])]),t("li",null,[e("Telegram 交流群："),t("a",S,[e("@bilibili_API_collect_community"),n(o)])])]),t("div",T,[R,t("p",null,[e("QQ 交流群为综合技术交流群（兼 Owner 的粉丝群），可交流探讨任何技术，包括但不限于 "),t("a",C,[e("BAC 项目"),n(o)])]),t("p",null,[e("Telegram 交流群主要用作 "),t("a",B,[e("BAC 项目"),n(o)]),e("的 Github Bot 接收，也可以进行项目相关的讨论，但不建议在此讨论交流其他内容（公开群）")])]),t("div",E,[N,D,t("p",null,[O,e("的加群问题答案可以去 "),t("a",M,[e("Owner 的主页"),n(o)]),e(" Contact 部分找到，如果您填写“我不知道，从 Github 来的”那么管理员将有理由禁止您进群讨论！")])]),G,t("p",null,[e("文档目录以 "),U,e("语法写在 "),n(a,{to:"/"},{default:l(()=>[e("README.md")]),_:1}),e(" 中，使用缩进标识文档的层级，如 "),V,e(" 下存在 "),j,e("、"),z,e("、"),L,e("、"),Q,e(" 等子分类，使用 "),J,e("语法该标注文档是否编写完成")]),K,t("p",null,[e("文档使用 "),t("a",W,[e("VuePress"),n(o)]),e(" 生成，可以使用 "),t("a",Y,[e("VuePress Markdown 扩展语法"),n(o)]),e("编写")]),t("p",null,[e("注：以下文档范式主要针对接口类文档, 可根据"),H,e("进行调整, 你也可以使用 "),t("a",X,[F,n(o)]),e(" 工具直接生成模板自行填充内容. 非接口类文档, 如算法等, 可以参考已有的内容")]),Z,t("p",null,[e("proto 文件为 "),t("a",$,[e("Protocol Buffers"),n(o)]),e(" 以及 "),t("a",ee,[e("gRPC"),n(o)]),e(" 的数据结构体定义，多用于客户端的接口，本文档也做相关的收集")]),te,t("p",null,[e("提交的标题不要使用默认的 "),ne,e(", 建议遵循 "),t("a",oe,[e("Conventional Commits (约定式提交) 规范"),n(o)]),e(", 标题语言可根据个人习惯")]),se])}const re=c(p,[["render",de],["__file","CONTRIBUTING.html.vue"]]);export{re as default};
